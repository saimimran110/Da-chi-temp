'use client'

import { useState, useEffect, useRef } from 'react'
import { motion, AnimatePresence, useScroll, useTransform } from 'framer-motion'
import { TypeAnimation } from 'react-type-animation'
import { ChevronLeft, ChevronRight, ShoppingCart, Droplet, Star } from 'lucide-react'

const products = [
  { id: 1, name: 'aventus creed', image: '/assets/p4.JPG?height=400&width=600', price: '$19.99' },
  { id: 2, name: 'jaun paul gaultier', image: '/placeholder.svg?height=400&width=600', price: '$18.99' },
  { id: 3, name: 'Ocean Fresh', image: '/placeholder.svg?height=400&width=600', price: '$20.99' },
  { id: 4, name: 'Vanilla Silk', image: '/placeholder.svg?height=400&width=600', price: '$21.99' },
  { id: 5, name: 'Bamboo Zen', image: '/placeholder.svg?height=400&width=600', price: '$22.99' },
  { id: 6, name: 'Rose Petal', image: '/placeholder.svg?height=400&width=600', price: '$19.99' },
  { id: 7, name: 'Midnight Musk', image: '/placeholder.svg?height=400&width=600', price: '$23.99' },
]

const bestSellers = [
  { id: 1, name: 'Lavender Mist', image: '/placeholder.svg?height=400&width=600', price: '$19.99', rating: 4.8 },
  { id: 2, name: 'Citrus Breeze', image: '/placeholder.svg?height=400&width=600', price: '$18.99', rating: 4.7 },
  { id: 3, name: 'Ocean Fresh', image: '/placeholder.svg?height=400&width=600', price: '$20.99', rating: 4.9 },
]

const fragrances = [
  { name: 'Lavender', color: '#8A2BE2' },
  { name: 'Citrus', color: '#FFA500' },
  { name: 'Ocean', color: '#1E90FF' },
  { name: 'Vanilla', color: '#F4A460' },
  { name: 'Bamboo', color: '#228B22' },
  { name: 'Rose', color: '#FF69B4' },
  { name: 'Musk', color: '#8B4513' },
]

export default function LandingPage() {
  const [currentProduct, setCurrentProduct] = useState(0)
  const [cart, setCart] = useState([])
  const [selectedFragrances, setSelectedFragrances] = useState([])
  const fragranceLabRef = useRef(null)
  const bestSellersRef = useRef(null)
  const { scrollYProgress } = useScroll()

  const bestSellersOpacity = useTransform(scrollYProgress, [0.1, 0.2], [0, 1])
  const bestSellersY = useTransform(scrollYProgress, [0.1, 0.2], [100, 0])

  const labScale = useTransform(scrollYProgress, [0.2, 0.3], [0.8, 1])
  const labOpacity = useTransform(scrollYProgress, [0.2, 0.3], [0, 1])
  const rotateDroplets = useTransform(scrollYProgress, [0.3, 0.4], [0, 360])

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentProduct((prev) => (prev + 1) % products.length)
    }, 5000)
    return () => clearInterval(interval)
  }, [])

  const addToCart = (product) => {
    setCart([...cart, product])
  }

  const toggleFragrance = (fragrance) => {
    setSelectedFragrances(prev => 
      prev.includes(fragrance)
        ? prev.filter(f => f !== fragrance)
        : [...prev, fragrance].slice(0, 3)
    )
  }

  const scrollToSection = (sectionId) => {
    const section = document.getElementById(sectionId)
    if (section) {
      section.scrollIntoView({ behavior: 'smooth' })
    }
  }

  const SectionHeader = ({ children }) => (
    <motion.h2 
      className="text-4xl font-bold mb-10 text-center relative py-4 px-8 inline-block"
      initial={{ opacity: 0, y: 20 }}
      whileInView={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      viewport={{ once: true, amount: 0.3 }}
    >
      <span className="relative z-10 bg-gradient-to-r from-blue-500 to-purple-500 text-transparent bg-clip-text">
        {children}
      </span>
    </motion.h2>
  )

  return (
    <div className="min-h-screen text-black relative overflow-hidden">
      <style jsx global>{`
        @import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Montserrat:wght@400;600&display=swap');
        
        h1, h2, h3, h4, h5, h6 {
          font-family: 'Playfair Display', serif;
        }
        
        body {
          font-family: 'Montserrat', sans-serif;
        }
      `}</style>
      
      <div className="relative z-10">
        <nav className="p-4 sticky top-0 bg-white z-50 flex items-center justify-between shadow-md">
          <div className="flex items-center">
            <img src="/placeholder.svg?height=40&width=40" alt="Da-chi Logo" className="h-10 w-10 mr-4" />
            <span className="text-xl font-bold text-black">Da-chi</span>
          </div>
          <motion.ul 
            className="flex justify-center space-x-8"
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
          >
            {[
              { name: 'Home', id: 'home' },
              { name: 'Products', id: 'products' },
              { name: 'Fragrance Lab', id: 'fragrance-lab' },
            ].map((item) => (
              <motion.li 
                key={item.name}
                whileHover={{ scale: 1.1 }}
                whileTap={{ scale: 0.95 }}
              >
                <button 
                  onClick={() => scrollToSection(item.id)}
                  className="text-lg font-semibold text-black hover:text-gray-600 transition-colors"
                >
                  {item.name}
                </button>
              </motion.li>
            ))}
          </motion.ul>
        </nav>

        <header id="home" className="text-center py-20 bg-black text-white">
          <motion.h1 
            className="text-6xl font-bold mb-4"
            initial={{ scale: 0 }}
            animate={{ scale: 1 }}
            transition={{ type: 'spring', stiffness: 260, damping: 20 }}
          >
            Da-chi Cosmetics
          </motion.h1>
          <TypeAnimation
            sequence={[
              'Elevate Your Freshness',
              1000,
              'Premium Deodorants for the Discerning',
              1000,
            ]}
            wrapper="h2"
            speed={50}
            className="text-2xl text-white"
            repeat={Infinity}
          />
        </header>

        <section className="relative overflow-hidden h-[400px] mb-20">
          <AnimatePresence mode="wait">
            <motion.img
              key={currentProduct}
              src={products[currentProduct].image}
              alt={products[currentProduct].name}
              className="w-full h-full object-cover"
              initial={{ opacity: 0, x: 300 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -300 }}
              transition={{ type: 'tween', duration: 0.5 }}
            />
          </AnimatePresence>
          <div className="absolute inset-0 flex items-center justify-between p-4">
            <button 
              onClick={() => setCurrentProduct((prev) => (prev - 1 + products.length) % products.length)}
              className="bg-white bg-opacity-50 p-2 rounded-full"
            >
              <ChevronLeft size={24} />
            </button>
            <button 
              onClick={() => setCurrentProduct((prev) => (prev + 1) % products.length)}
              className="bg-white bg-opacity-50 p-2 rounded-full"
            >
              <ChevronRight size={24} />
            </button>
          </div>
        </section>

        <div className="bg-white">
          <motion.section
            id="best-sellers"
            ref={bestSellersRef}
            className="container mx-auto px-4 mb-20"
            style={{ opacity: bestSellersOpacity, y: bestSellersY }}
          >
            <SectionHeader>Best Selling Products</SectionHeader>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              {bestSellers.map((product) => (
                <motion.div 
                  key={product.id}
                  className="bg-gray-100 rounded-lg overflow-hidden shadow-lg"
                  whileHover={{ scale: 1.05, boxShadow: '0 0 20px rgba(0, 0, 0, 0.1)' }}
                >
                  <img src={product.image} alt={product.name} className="w-full h-64 object-cover" />
                  <div className="p-4">
                    <h3 className="text-xl font-semibold mb-2">{product.name}</h3>
                    <div className="flex justify-between items-center mb-4">
                      <span className="text-lg font-bold">{product.price}</span>
                      <div className="flex items-center">
                        <Star className="w-5 h-5 text-yellow-400 mr-1" />
                        <span>{product.rating}</span>
                      </div>
                    </div>
                    <motion.button
                      className="bg-black text-white px-4 py-2 rounded-full w-full font-semibold"
                      whileHover={{ scale: 1.05 }}
                      whileTap={{ scale: 0.95 }}
                      onClick={() => addToCart(product)}
                    >
                      Add to Cart
                    </motion.button>
                  </div>
                </motion.div>
              ))}
            </div>
          </motion.section>

          <motion.section
            id="fragrance-lab"
            ref={fragranceLabRef}
            className="container mx-auto px-4 py-20 mb-20"
            style={{ scale: labScale, opacity: labOpacity }}
          >
            <div className="text-center mb-10">
              <h2 className="text-4xl font-bold inline-block bg-gradient-to-r from-blue-500 to-purple-500 text-transparent bg-clip-text">
                Fragrance Lab
              </h2>
            </div>
            <p className="text-center mb-8">Mix and match up to 3 fragrances to create your custom deodorant!</p>
            <div className="relative">
              <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 mb-8">
                {fragrances.map((fragrance) => (
                  <motion.button
                    key={fragrance.name}
                    className={`p-4 rounded-lg text-center transition-colors ${
                      selectedFragrances.includes(fragrance) ? 'bg-black text-white' : 'bg-gray-200 text-black'
                    }`}
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    onClick={() => toggleFragrance(fragrance)}
                  >
                    {fragrance.name}
                  </motion.button>
                ))}
              </div>
              <motion.div 
                className="absolute inset-0 pointer-events-none"
                style={{ rotate: rotateDroplets }}
              >
                {fragrances.map((fragrance, index) => (
                  <motion.div
                    key={fragrance.name}
                    className="absolute"
                    style={{
                      top: `${50 + 40 * Math.sin(index * (2 * Math.PI) / fragrances.length)}%`,
                      left: `${50 + 40 * Math.cos(index * (2 * Math.PI) / fragrances.length)}%`,
                    }}
                    initial={{ scale: 0 }}
                    animate={{ scale: selectedFragrances.includes(fragrance) ? 1 : 0 }}
                    transition={{ type: 'spring', stiffness: 300, damping: 20 }}
                  >
                    <Droplet size={24} color={fragrance.color} />
                  </motion.div>
                ))}
              </motion.div>
            </div>
            <div className="text-center">
              <h3 className="text-2xl font-semibold mb-4">Your Custom Blend</h3>
              <div className="flex justify-center items-center space-x-4">
                {selectedFragrances.length > 0 ? (
                  selectedFragrances.map((fragrance) => (
                    <motion.div
                      key={fragrance.name}
                      className="w-16 h-16 rounded-full"
                      style={{ backgroundColor: fragrance.color }}
                      initial={{ scale: 0 }}
                      animate={{ scale: 1 }}
                      transition={{ type: 'spring', stiffness: 300, damping: 20 }}
                    />
                  ))
                ) : (
                  <p>Select fragrances to create your blend!</p>
                )}
              </div>
              {selectedFragrances.length > 0 && (
                <motion.button
                  className="mt-8 bg-black text-white px-6 py-3 rounded-full font-semibold"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  onClick={() => addToCart({ name: 'Custom Blend', image: '/placeholder.svg?height=400&width=600' })}
                >
                  Add Custom Blend to Cart
                </motion.button>
              )}
            </div>
          </motion.section>

          <motion.section 
            id="products" 
            className="container mx-auto px-4 mb-20"
            initial={{ opacity: 0, y: 50 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
            viewport={{ once: true, amount: 0.3 }}
          >
            <SectionHeader>Our Products</SectionHeader>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {products.map((product, index) => (
                <motion.div 
                  key={product.id}
                  className="bg-gray-100 rounded-lg overflow-hidden shadow-lg"
                  initial={{ opacity: 0, y: 50 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  whileHover={{ scale: 1.05, boxShadow: '0 0 20px rgba(0, 0, 0, 0.1)' }}
                >
                  <img src={product.image} alt={product.name} className="w-full h-64 object-cover" />
                  <div className="p-4">
                    <h3 className="text-xl font-semibold mb-2">{product.name}</h3>
                    <p className="text-lg font-bold mb-4">{product.price}</p>
                    <motion.button
                      className="bg-black text-white px-4 py-2 rounded-full w-full font-semibold"
                      whileHover={{ scale: 1.05 }}
                      whileTap={{ scale: 0.95 }}
                      onClick={() => addToCart(product)}
                    >
                      Add to Cart
                    </motion.button>
                  </div>
                </motion.div>
              ))}
            </div>
          </motion.section>
        </div>

        <footer className="bg-gray-100 py-10">
          <div className="container mx-auto px-4">
            <div className="flex flex-wrap justify-between items-center">
              <div className="w-full md:w-1/3 mb-6 md:mb-0">
                <h3 className="text-2xl font-bold mb-4">Da-chi Cosmetics</h3>
                <p className="text-gray-600">Elevating your freshness with premium deodorants.</p>
              </div>
              <div className="w-full md:w-1/3 mb-6 md:mb-0">
                <h4 className="text-xl font-semibold mb-4">Quick Links</h4>
                <ul className="space-y-2">
                  <li><a href="#home" className="text-gray-600 hover:text-black">Home</a></li>
                  <li><a href="#products" className="text-gray-600 hover:text-black">Products</a></li>
                  <li><a href="#fragrance-lab" className="text-gray-600 hover:text-black">Fragrance Lab</a></li>
                </ul>
              </div>
              <div className="w-full md:w-1/3">
                <h4 className="text-xl font-semibold mb-4">Follow Us</h4>
                <div className="flex space-x-4">
                  {['Facebook', 'Twitter', 'Instagram', 'LinkedIn'].map((social) => (
                    <motion.a
                      key={social}
                      href="#"
                      className="text-gray-600 hover:text-black"
                      whileHover={{ scale: 1.2 }}
                      whileTap={{ scale: 0.9 }}
                    >
                      {social}
                    </motion.a>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </footer>

        <motion.div
          className="fixed bottom-4 right-4 bg-black text-white p-3 rounded-full cursor-pointer"
          whileHover={{ scale: 1.1 }}
          whileTap={{ scale: 0.9 }}
        >
          <ShoppingCart size={24} />
          {cart.length > 0 && (
            <span className="absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs">
              {cart.length}
            </span>
          )}
        </motion.div>
      </div>
    </div>
  )
}